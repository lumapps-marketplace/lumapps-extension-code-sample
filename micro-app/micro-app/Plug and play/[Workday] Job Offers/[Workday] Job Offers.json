[
  {
    "id": "ec8d5cce-bf25-49a3-8863-9df663bd4f24",
    "name": "display offers",
    "code": "display_offers",
    "position": {
      "x": 888,
      "y": 0
    },
    "type": "adaptive_card",
    "links": [
      {
        "targetId": "a6ce47fe-ee5c-4267-a050-0167491a7b95",
        "type": "go_back"
      }
    ],
    "settings": {
      "template": {
        "$schema": "http://adaptivecards.io/schemas/adaptive-card.json",
        "body": [
          {
            "type": "Container",
            "items": [
              {
                "size": "Medium",
                "text": "Here are some job offers that might interest you:",
                "type": "TextBlock",
                "wrap": true,
                "weight": "Bolder"
              }
            ]
          },
          {
            "type": "Container",
            "$data": "${actions.filter_lists.output.filteredJobPostings}",
            "items": [
              {
                "type": "ColumnSet",
                "columns": [
                  {
                    "type": "Column",
                    "items": [
                      {
                        "type": "FactSet",
                        "facts": [
                          {
                            "title": "Job Title",
                            "value": "${title}"
                          },
                          {
                            "title": "Location",
                            "value": "${location}"
                          }
                        ]
                      }
                    ],
                    "width": "stretch"
                  }
                ]
              },
              {
                "type": "Container",
                "items": [
                  {
                    "type": "ActionSet",
                    "actions": [
                      {
                        "url": "${url}",
                        "type": "Action.OpenUrl",
                        "style": "positive",
                        "title": "View details"
                      }
                    ]
                  }
                ]
              }
            ],
            "style": "emphasis"
          }
        ],
        "type": "AdaptiveCard",
        "version": "1.5",
        "actions": [
          {
            "id": "a6ce47fe-ee5c-4267-a050-0167491a7b95",
            "type": "Action.Execute",
            "title": "✏️ Modify criterias"
          }
        ]
      }
    }
  },
  {
    "id": "c7d06961-d561-4db4-b660-f9f60d812c16",
    "name": "filterLists",
    "code": "filter_lists",
    "position": {
      "x": 660,
      "y": 0
    },
    "type": "function",
    "links": [
      {
        "targetId": "ec8d5cce-bf25-49a3-8863-9df663bd4f24",
        "type": "default"
      }
    ],
    "settings": {
      "language": "javascript",
      "source": "function main(executionContext) {\n    const jobPostings = executionContext.actions.get_job_postings.response.body.data;\n    const titles = (executionContext.actions.pick_filters?.inputs?.jobTitleChoice || '').split(',');\n    const locations = (executionContext.actions.pick_filters?.inputs?.locationChoice || '').split(',');\n\n    return {\n        filteredJobPostings: jobPostings\n            .filter(job => \n                (titles.length === 0 || titles.includes(job.title)) &&\n                (locations.length === 0 || locations.includes(job.primaryLocation?.descriptor))\n            )\n            .map(job => ({\n                title: job.title,\n                url: job.url,\n                location: job.primaryLocation?.descriptor\n            }))\n    };\n}"
    }
  },
  {
    "id": "a6ce47fe-ee5c-4267-a050-0167491a7b95",
    "name": "pick_filters",
    "code": "pick_filters",
    "position": {
      "x": 432,
      "y": 0
    },
    "type": "adaptive_card",
    "links": [
      {
        "targetId": "c7d06961-d561-4db4-b660-f9f60d812c16",
        "type": "default"
      }
    ],
    "settings": {
      "template": {
        "$schema": "http://adaptivecards.io/schemas/adaptive-card.json",
        "body": [
          {
            "size": "Medium",
            "text": "Choose your search criteria",
            "type": "TextBlock",
            "weight": "Bolder"
          },
          {
            "text": "Select a job title",
            "type": "TextBlock",
            "wrap": true
          },
          {
            "id": "jobTitleChoice",
            "type": "Input.ChoiceSet",
            "choices": [
              {
                "$data": "${actions.js.output.titles}",
                "title": "${title}",
                "value": "${value}"
              }
            ],
            "isMultiSelect": true
          },
          {
            "text": "Select a location",
            "type": "TextBlock",
            "wrap": true
          },
          {
            "id": "locationChoice",
            "type": "Input.ChoiceSet",
            "choices": [
              {
                "$data": "${actions.js.output.primaryLocations}",
                "title": "${title}",
                "value": "${value}"
              }
            ],
            "isMultiSelect": true
          }
        ],
        "type": "AdaptiveCard",
        "version": "1.5",
        "actions": [
          {
            "type": "Action.Execute",
            "verb": "applyJobFilters",
            "style": "positive",
            "title": "Apply filters"
          }
        ]
      }
    }
  },
  {
    "id": "2eb210ac-f794-497b-9b47-c4b20173f678",
    "name": "js",
    "code": "js",
    "position": {
      "x": 204,
      "y": 0
    },
    "type": "function",
    "links": [
      {
        "targetId": "a6ce47fe-ee5c-4267-a050-0167491a7b95",
        "type": "default"
      }
    ],
    "settings": {
      "language": "javascript",
      "source": "/**\n * Process data from the execution context in order to extract unique titles and primary locations.\n * @param {Object} executionContext  The execution context as a freezed object, you cannot update it directly.\n * @returns {Object}                 The result of data processing with unique titles and primary locations.\n */\nfunction main(executionContext) {\n   // Declaration of the output variable.\n   let output = {};\n\n   // Extract job postings from the context\n   const jobPostings = executionContext.actions.get_job_postings.response.body.data;\n\n   // Extract unique titles as array of objects\n   const uniqueTitlesSet = new Set(jobPostings\n       .map(posting => posting.title)\n       .filter(title => title !== undefined)\n   );\n\n   output.titles = Array.from(uniqueTitlesSet).map(title => ({\n       value: title,\n       title: title\n   }));\n\n   // Extract unique primary locations as array of objects\n   const uniqueLocationsSet = new Set(jobPostings\n       .map(posting => posting.primaryLocation?.descriptor)\n       .filter(location => location !== undefined)\n   );\n\n   output.primaryLocations = Array.from(uniqueLocationsSet).map(location => ({\n       value: location,\n       title: location\n   }));\n\n   // Mandatory: return your output.\n   return output;\n}"
    }
  },
  {
    "id": "abd91f03-3c93-4be3-aac6-7a9f284068ce",
    "name": "get job postings",
    "code": "get_job_postings",
    "position": {
      "x": -24,
      "y": 0
    },
    "type": "api_call",
    "links": [
      {
        "targetId": "2eb210ac-f794-497b-9b47-c4b20173f678",
        "type": "default"
      }
    ],
    "settings": {
      "authentication": {
        "method": "connector",
        "providerType": "workday"
      },
      "endpoint": {
        "httpMethod": "GET",
        "body": "",
        "path": "/api/recruiting/v1/${actions.start.inputVariables.department}/jobPostings",
        "queryParams": [],
        "url": ""
      }
    }
  },
  {
    "id": "19864884-c267-4604-940d-437034135099",
    "name": "Start",
    "code": "start",
    "position": {
      "x": -252,
      "y": 0
    },
    "type": "trigger",
    "links": [
      {
        "targetId": "abd91f03-3c93-4be3-aac6-7a9f284068ce",
        "type": "default"
      }
    ],
    "settings": {
      "inputVariables": [
        {
          "id": "department",
          "type": "string",
          "defaultValue": "lumapps_dpt1",
          "multiValues": false,
          "required": false,
          "source": "developer"
        }
      ]
    }
  }
]